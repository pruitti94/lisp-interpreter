Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CAR
    CDR
    CONS
    GREATER
    GREATEREQUAL
    LESS
    LESSEQUAL
    NOTEQUAL

Grammar

Rule 0     S' -> lispStart
Rule 1     lispStart -> lisp SEMI
Rule 2     lisp -> NUMBER
Rule 3     lisp -> TRUE
Rule 4     lisp -> FALSE
Rule 5     lisp -> LPARENT PLUS lisp lisp RPARENT
Rule 6     lisp -> LPARENT MINUS lisp lisp RPARENT
Rule 7     lisp -> LPARENT TIMES lisp lisp RPARENT
Rule 8     lisp -> LPARENT DIV lisp lisp RPARENT
Rule 9     lisp -> LPARENT IF lisp lisp lisp RPARENT
Rule 10    lisp -> LPARENT AND lisp lisp RPARENT
Rule 11    lisp -> LPARENT OR lisp lisp RPARENT
Rule 12    lisp -> LPARENT NUMBER lisp RPARENT

Terminals, with rules where they appear

AND                  : 10
CAR                  : 
CDR                  : 
CONS                 : 
DIV                  : 8
FALSE                : 4
GREATER              : 
GREATEREQUAL         : 
IF                   : 9
LESS                 : 
LESSEQUAL            : 
LPARENT              : 5 6 7 8 9 10 11 12
MINUS                : 6
NOTEQUAL             : 
NUMBER               : 2 12
OR                   : 11
PLUS                 : 5
RPARENT              : 5 6 7 8 9 10 11 12
SEMI                 : 1
TIMES                : 7
TRUE                 : 3
error                : 

Nonterminals, with rules where they appear

lisp                 : 1 5 5 6 6 7 7 8 8 9 9 9 10 10 11 11 12
lispStart            : 0

Parsing method: LALR

state 0

    (0) S' -> . lispStart
    (1) lispStart -> . lisp SEMI
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lispStart                      shift and go to state 1
    lisp                           shift and go to state 2

state 1

    (0) S' -> lispStart .



state 2

    (1) lispStart -> lisp . SEMI

    SEMI            shift and go to state 7


state 3

    (2) lisp -> NUMBER .

    SEMI            reduce using rule 2 (lisp -> NUMBER .)
    NUMBER          reduce using rule 2 (lisp -> NUMBER .)
    TRUE            reduce using rule 2 (lisp -> NUMBER .)
    FALSE           reduce using rule 2 (lisp -> NUMBER .)
    LPARENT         reduce using rule 2 (lisp -> NUMBER .)
    RPARENT         reduce using rule 2 (lisp -> NUMBER .)


state 4

    (3) lisp -> TRUE .

    SEMI            reduce using rule 3 (lisp -> TRUE .)
    NUMBER          reduce using rule 3 (lisp -> TRUE .)
    TRUE            reduce using rule 3 (lisp -> TRUE .)
    FALSE           reduce using rule 3 (lisp -> TRUE .)
    LPARENT         reduce using rule 3 (lisp -> TRUE .)
    RPARENT         reduce using rule 3 (lisp -> TRUE .)


state 5

    (4) lisp -> FALSE .

    SEMI            reduce using rule 4 (lisp -> FALSE .)
    NUMBER          reduce using rule 4 (lisp -> FALSE .)
    TRUE            reduce using rule 4 (lisp -> FALSE .)
    FALSE           reduce using rule 4 (lisp -> FALSE .)
    LPARENT         reduce using rule 4 (lisp -> FALSE .)
    RPARENT         reduce using rule 4 (lisp -> FALSE .)


state 6

    (5) lisp -> LPARENT . PLUS lisp lisp RPARENT
    (6) lisp -> LPARENT . MINUS lisp lisp RPARENT
    (7) lisp -> LPARENT . TIMES lisp lisp RPARENT
    (8) lisp -> LPARENT . DIV lisp lisp RPARENT
    (9) lisp -> LPARENT . IF lisp lisp lisp RPARENT
    (10) lisp -> LPARENT . AND lisp lisp RPARENT
    (11) lisp -> LPARENT . OR lisp lisp RPARENT
    (12) lisp -> LPARENT . NUMBER lisp RPARENT

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIV             shift and go to state 11
    IF              shift and go to state 12
    AND             shift and go to state 13
    OR              shift and go to state 14
    NUMBER          shift and go to state 15


state 7

    (1) lispStart -> lisp SEMI .

    $end            reduce using rule 1 (lispStart -> lisp SEMI .)


state 8

    (5) lisp -> LPARENT PLUS . lisp lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 16

state 9

    (6) lisp -> LPARENT MINUS . lisp lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 17

state 10

    (7) lisp -> LPARENT TIMES . lisp lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 18

state 11

    (8) lisp -> LPARENT DIV . lisp lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 19

state 12

    (9) lisp -> LPARENT IF . lisp lisp lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 20

state 13

    (10) lisp -> LPARENT AND . lisp lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 21

state 14

    (11) lisp -> LPARENT OR . lisp lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 22

state 15

    (12) lisp -> LPARENT NUMBER . lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 23

state 16

    (5) lisp -> LPARENT PLUS lisp . lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 24

state 17

    (6) lisp -> LPARENT MINUS lisp . lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 25

state 18

    (7) lisp -> LPARENT TIMES lisp . lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 26

state 19

    (8) lisp -> LPARENT DIV lisp . lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 27

state 20

    (9) lisp -> LPARENT IF lisp . lisp lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 28

state 21

    (10) lisp -> LPARENT AND lisp . lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 29

state 22

    (11) lisp -> LPARENT OR lisp . lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 30

state 23

    (12) lisp -> LPARENT NUMBER lisp . RPARENT

    RPARENT         shift and go to state 31


state 24

    (5) lisp -> LPARENT PLUS lisp lisp . RPARENT

    RPARENT         shift and go to state 32


state 25

    (6) lisp -> LPARENT MINUS lisp lisp . RPARENT

    RPARENT         shift and go to state 33


state 26

    (7) lisp -> LPARENT TIMES lisp lisp . RPARENT

    RPARENT         shift and go to state 34


state 27

    (8) lisp -> LPARENT DIV lisp lisp . RPARENT

    RPARENT         shift and go to state 35


state 28

    (9) lisp -> LPARENT IF lisp lisp . lisp RPARENT
    (2) lisp -> . NUMBER
    (3) lisp -> . TRUE
    (4) lisp -> . FALSE
    (5) lisp -> . LPARENT PLUS lisp lisp RPARENT
    (6) lisp -> . LPARENT MINUS lisp lisp RPARENT
    (7) lisp -> . LPARENT TIMES lisp lisp RPARENT
    (8) lisp -> . LPARENT DIV lisp lisp RPARENT
    (9) lisp -> . LPARENT IF lisp lisp lisp RPARENT
    (10) lisp -> . LPARENT AND lisp lisp RPARENT
    (11) lisp -> . LPARENT OR lisp lisp RPARENT
    (12) lisp -> . LPARENT NUMBER lisp RPARENT

    NUMBER          shift and go to state 3
    TRUE            shift and go to state 4
    FALSE           shift and go to state 5
    LPARENT         shift and go to state 6

    lisp                           shift and go to state 36

state 29

    (10) lisp -> LPARENT AND lisp lisp . RPARENT

    RPARENT         shift and go to state 37


state 30

    (11) lisp -> LPARENT OR lisp lisp . RPARENT

    RPARENT         shift and go to state 38


state 31

    (12) lisp -> LPARENT NUMBER lisp RPARENT .

    SEMI            reduce using rule 12 (lisp -> LPARENT NUMBER lisp RPARENT .)
    NUMBER          reduce using rule 12 (lisp -> LPARENT NUMBER lisp RPARENT .)
    TRUE            reduce using rule 12 (lisp -> LPARENT NUMBER lisp RPARENT .)
    FALSE           reduce using rule 12 (lisp -> LPARENT NUMBER lisp RPARENT .)
    LPARENT         reduce using rule 12 (lisp -> LPARENT NUMBER lisp RPARENT .)
    RPARENT         reduce using rule 12 (lisp -> LPARENT NUMBER lisp RPARENT .)


state 32

    (5) lisp -> LPARENT PLUS lisp lisp RPARENT .

    SEMI            reduce using rule 5 (lisp -> LPARENT PLUS lisp lisp RPARENT .)
    NUMBER          reduce using rule 5 (lisp -> LPARENT PLUS lisp lisp RPARENT .)
    TRUE            reduce using rule 5 (lisp -> LPARENT PLUS lisp lisp RPARENT .)
    FALSE           reduce using rule 5 (lisp -> LPARENT PLUS lisp lisp RPARENT .)
    LPARENT         reduce using rule 5 (lisp -> LPARENT PLUS lisp lisp RPARENT .)
    RPARENT         reduce using rule 5 (lisp -> LPARENT PLUS lisp lisp RPARENT .)


state 33

    (6) lisp -> LPARENT MINUS lisp lisp RPARENT .

    SEMI            reduce using rule 6 (lisp -> LPARENT MINUS lisp lisp RPARENT .)
    NUMBER          reduce using rule 6 (lisp -> LPARENT MINUS lisp lisp RPARENT .)
    TRUE            reduce using rule 6 (lisp -> LPARENT MINUS lisp lisp RPARENT .)
    FALSE           reduce using rule 6 (lisp -> LPARENT MINUS lisp lisp RPARENT .)
    LPARENT         reduce using rule 6 (lisp -> LPARENT MINUS lisp lisp RPARENT .)
    RPARENT         reduce using rule 6 (lisp -> LPARENT MINUS lisp lisp RPARENT .)


state 34

    (7) lisp -> LPARENT TIMES lisp lisp RPARENT .

    SEMI            reduce using rule 7 (lisp -> LPARENT TIMES lisp lisp RPARENT .)
    NUMBER          reduce using rule 7 (lisp -> LPARENT TIMES lisp lisp RPARENT .)
    TRUE            reduce using rule 7 (lisp -> LPARENT TIMES lisp lisp RPARENT .)
    FALSE           reduce using rule 7 (lisp -> LPARENT TIMES lisp lisp RPARENT .)
    LPARENT         reduce using rule 7 (lisp -> LPARENT TIMES lisp lisp RPARENT .)
    RPARENT         reduce using rule 7 (lisp -> LPARENT TIMES lisp lisp RPARENT .)


state 35

    (8) lisp -> LPARENT DIV lisp lisp RPARENT .

    SEMI            reduce using rule 8 (lisp -> LPARENT DIV lisp lisp RPARENT .)
    NUMBER          reduce using rule 8 (lisp -> LPARENT DIV lisp lisp RPARENT .)
    TRUE            reduce using rule 8 (lisp -> LPARENT DIV lisp lisp RPARENT .)
    FALSE           reduce using rule 8 (lisp -> LPARENT DIV lisp lisp RPARENT .)
    LPARENT         reduce using rule 8 (lisp -> LPARENT DIV lisp lisp RPARENT .)
    RPARENT         reduce using rule 8 (lisp -> LPARENT DIV lisp lisp RPARENT .)


state 36

    (9) lisp -> LPARENT IF lisp lisp lisp . RPARENT

    RPARENT         shift and go to state 39


state 37

    (10) lisp -> LPARENT AND lisp lisp RPARENT .

    SEMI            reduce using rule 10 (lisp -> LPARENT AND lisp lisp RPARENT .)
    NUMBER          reduce using rule 10 (lisp -> LPARENT AND lisp lisp RPARENT .)
    TRUE            reduce using rule 10 (lisp -> LPARENT AND lisp lisp RPARENT .)
    FALSE           reduce using rule 10 (lisp -> LPARENT AND lisp lisp RPARENT .)
    LPARENT         reduce using rule 10 (lisp -> LPARENT AND lisp lisp RPARENT .)
    RPARENT         reduce using rule 10 (lisp -> LPARENT AND lisp lisp RPARENT .)


state 38

    (11) lisp -> LPARENT OR lisp lisp RPARENT .

    SEMI            reduce using rule 11 (lisp -> LPARENT OR lisp lisp RPARENT .)
    NUMBER          reduce using rule 11 (lisp -> LPARENT OR lisp lisp RPARENT .)
    TRUE            reduce using rule 11 (lisp -> LPARENT OR lisp lisp RPARENT .)
    FALSE           reduce using rule 11 (lisp -> LPARENT OR lisp lisp RPARENT .)
    LPARENT         reduce using rule 11 (lisp -> LPARENT OR lisp lisp RPARENT .)
    RPARENT         reduce using rule 11 (lisp -> LPARENT OR lisp lisp RPARENT .)


state 39

    (9) lisp -> LPARENT IF lisp lisp lisp RPARENT .

    SEMI            reduce using rule 9 (lisp -> LPARENT IF lisp lisp lisp RPARENT .)
    NUMBER          reduce using rule 9 (lisp -> LPARENT IF lisp lisp lisp RPARENT .)
    TRUE            reduce using rule 9 (lisp -> LPARENT IF lisp lisp lisp RPARENT .)
    FALSE           reduce using rule 9 (lisp -> LPARENT IF lisp lisp lisp RPARENT .)
    LPARENT         reduce using rule 9 (lisp -> LPARENT IF lisp lisp lisp RPARENT .)
    RPARENT         reduce using rule 9 (lisp -> LPARENT IF lisp lisp lisp RPARENT .)

