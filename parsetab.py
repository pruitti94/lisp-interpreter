
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CAR CAR CDR CDR CONS CONS DIV FALSE GREATER GREATEREQUAL IF LESS LESSEQUAL LPARENT MINUS NOTEQUAL NUMBER OR PLUS RPARENT SEMI TIMES TRUElispStart : lisp SEMIlisp : NUMBERlisp : TRUElisp : FALSElisp : LPARENT PLUS lisp lisp RPARENTlisp : LPARENT MINUS lisp lisp RPARENTlisp : LPARENT TIMES lisp lisp RPARENTlisp : LPARENT DIV lisp lisp RPARENTlisp : LPARENT IF lisp lisp lisp RPARENTlisp : LPARENT AND lisp lisp RPARENTlisp : LPARENT OR lisp lisp RPARENTlisp : LPARENT NUMBER lisp RPARENT'
    
_lr_action_items = {'NUMBER':([0,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,28,31,32,33,34,35,37,38,39,],[3,-2,-3,-4,15,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-12,-5,-6,-7,-8,-10,-11,-9,]),'TRUE':([0,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,28,31,32,33,34,35,37,38,39,],[4,-2,-3,-4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-12,-5,-6,-7,-8,-10,-11,-9,]),'FALSE':([0,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,28,31,32,33,34,35,37,38,39,],[5,-2,-3,-4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-12,-5,-6,-7,-8,-10,-11,-9,]),'LPARENT':([0,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,28,31,32,33,34,35,37,38,39,],[6,-2,-3,-4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-12,-5,-6,-7,-8,-10,-11,-9,]),'$end':([1,7,],[0,-1,]),'SEMI':([2,3,4,5,31,32,33,34,35,37,38,39,],[7,-2,-3,-4,-12,-5,-6,-7,-8,-10,-11,-9,]),'RPARENT':([3,4,5,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,],[-2,-3,-4,31,32,33,34,35,37,38,-12,-5,-6,-7,-8,39,-10,-11,-9,]),'PLUS':([6,],[8,]),'MINUS':([6,],[9,]),'TIMES':([6,],[10,]),'DIV':([6,],[11,]),'IF':([6,],[12,]),'AND':([6,],[13,]),'OR':([6,],[14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lispStart':([0,],[1,]),'lisp':([0,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,28,],[2,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lispStart","S'",1,None,None,None),
  ('lispStart -> lisp SEMI','lispStart',2,'p_lispStart','LISPParser.py',5),
  ('lisp -> NUMBER','lisp',1,'p_lisp_1','LISPParser.py',9),
  ('lisp -> TRUE','lisp',1,'p_lisp_2','LISPParser.py',13),
  ('lisp -> FALSE','lisp',1,'p_lisp_3','LISPParser.py',17),
  ('lisp -> LPARENT PLUS lisp lisp RPARENT','lisp',5,'p_lisp_4','LISPParser.py',22),
  ('lisp -> LPARENT MINUS lisp lisp RPARENT','lisp',5,'p_lisp_5','LISPParser.py',27),
  ('lisp -> LPARENT TIMES lisp lisp RPARENT','lisp',5,'p_lisp_6','LISPParser.py',32),
  ('lisp -> LPARENT DIV lisp lisp RPARENT','lisp',5,'p_lisp_7','LISPParser.py',37),
  ('lisp -> LPARENT IF lisp lisp lisp RPARENT','lisp',6,'p_lisp_8','LISPParser.py',42),
  ('lisp -> LPARENT AND lisp lisp RPARENT','lisp',5,'p_lisp9','LISPParser.py',47),
  ('lisp -> LPARENT OR lisp lisp RPARENT','lisp',5,'p_lisp10','LISPParser.py',51),
  ('lisp -> LPARENT NUMBER lisp RPARENT','lisp',4,'p_lisp11','LISPParser.py',55),
]
